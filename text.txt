
create database Dricamp;
use Dricamp;
create table rol(
id_rol int auto_increment,
nombre varchar(50) not null,
primary key (id_rol)
);
create table direccion(
id_direccion int auto_increment,
direccion varchar(150) not null,
ciudad varchar(150) not null,
departamento varchar(150) not null,
descripcion varchar(300),
primary key (id_direccion)
);
create table tipoDocumento(
id_tipodocumento int auto_increment,
nombre varchar(100) not null,
primary key (id_tipodocumento)
);
create table usuario(
id_usuario int auto_increment,
id_tipodocumento int not null,
num_documento int not null,
nombre varchar(150) not null,
apellido varchar(150) not null,
telefono int not null unique,
email varchar(150) not null unique,
id_direccion int not null,
fecha_nacimiento date not null,
nombre_usuario varchar(50) not null unique,
contrase√±a varchar(8) not null,
primary key(id_usuario),
key fk_tipodoc (id_tipodocumento),
key fk_dir (id_direccion),
constraint fk_tipodoc foreign key (id_tipodocumento) references tipoDocumento(id_tipodocumento),
constraint fk_dir foreign key (id_direccion) references direccion(id_direccion) on delete cascade
);
create table usuarioRol(
id_usuariorol int auto_increment,
id_usuario int not null,
id_rol int not null,
primary key (id_usuariorol),
key fk_usr (id_usuario),
key fk_rol (id_rol),
constraint fk_usr foreign key (id_usuario) references usuario(id_usuario),
constraint fk_rol foreign key (id_rol) references rol(id_rol)
);
create table campesino (
id_campesino int auto_increment,
id_usuario int not null,
finca varchar(100),
primary key (id_campesino),
key fk_us (id_usuario),
constraint fk_us foreign key (id_usuario) references usuario(id_usuario)
);
create table categoriaLicencia(
id_catlicencia int auto_increment,
categoria varchar(20) not null,
primary key (id_catlicencia)
);
create table tipoVehiculo(
id_tipovehiculo int auto_increment,
tipo varchar(100) not null,
primary key (id_tipovehiculo)
);
create table marca(
id_marca int auto_increment,
marca varchar(100) not null,
primary key (id_marca)
);
create table vehiculo(
id_vehiculo int auto_increment,
id_tipovehiculo int not null,
id_marca int not null,
placa varchar(12) not null,
modleo int not null, 
capacidad_carga int not null,
primary key(id_vehiculo),
key fk_tipovehi (id_tipovehiculo),
key fk_marca (id_marca),
constraint fk_tipovehiculo foreign key (id_tipovehiculo) references tipoVehiculo(id_tipovehiculo),
constraint fk_marca foreign key (id_marca) references marca(id_marca)
);
create table transportista (
id_transportista int auto_increment,
id_usuario int not null,
id_catlicencia int not null,
id_vehiculo int not null,
num_licencia varchar(30) not null,
primary key (id_transportista),
key fk_user (id_usuario),
key fk_licencia (id_catlicencia),
key fk_vehiculo (id_vehiculo),
constraint fk_vehiculo foreign key (id_vehiculo) references vehiculo(id_vehiculo),
constraint fk_licencia foreign key (id_catlicencia) references categoriaLicencia(id_catlicencia),
constraint fk_user foreign key (id_usuario) references usuario(id_usuario)
);
create table ruta(
id_ruta int auto_increment,
id_transportista int not null,
fecha_salida date not null,
fecha_destino date not null,
primary key (id_ruta),
key fk_transp (id_transportista),
constraint fk_transp foreign key (id_transportista) references transportista(id_transportista) on delete cascade
);
create table parada(
id_parada int auto_increment,
ciudad varchar(100) not null,
departamento varchar(100) not null,
paradaEstacion varchar(100) not null,
primary key (id_parada)
);
create table rutaParada(
id_rutaparada int auto_increment,
orden int not null,
id_ruta int not null,
id_parada int not null,
primary key (id_rutaparada),
key fk_ruta (id_ruta),
key fk_parada (id_parada),
constraint fk_ruta foreign key (id_ruta) references ruta(id_ruta),
constraint fk_parada foreign key (id_parada) references parada(id_parada)
);
create table categoria(
id_categoria int auto_increment,
nombre varchar(50) not null,
primary key (id_categoria)
);
create table estado(
id_estado int auto_increment,
nombre varchar(50) not null,
primary key (id_estado)
);
create table presentacion(
id_presentacion int auto_increment,
nombre varchar(50) not null,
descripcion varchar(200),
primary key (id_presentacion)
);
create table producto(
id_producto int auto_increment,
id_campesino int not null,
id_estado int not null,
id_categoria int not null,
id_presentacion int not null,
nombre varchar(50) not null,
precio double not null,
fecha_creacion date not null,
fecha_caducidad date not null,
descripcion varchar(200),
primary key (id_producto),
key fk_estado (id_estado), 
key fk_categoria (id_categoria),
key fk_presentacion (id_presentacion),
key fk_campesino (id_campesino),
constraint fk_campesino foreign key (id_campesino) references campesino(id_campesino),
constraint fk_categoria foreign key (id_categoria) references categoria(id_categoria),
constraint fk_presentacion foreign key (id_presentacion) references presentacion(id_presentacion),
constraint fk_estado foreign key (id_estado) references estado(id_estado)
);
create table pedido(
id_pedido int auto_increment,
id_usuario int not null,
fecha_pedido date not null, 
valor_total double not null,
id_estado int,
primary key (id_pedido),
key fk_usuari (id_usuario),
key fk_estad (id_estado),
constraint fk_estad foreign key (id_estado) references estado(id_estado),
constraint fk_usuari foreign key (id_usuario) references usuario(id_usuario)
);
create table pedidoProducto(
id_detalles int auto_increment,
id_pedido int not null,
id_producto int not null, 
cantidad int not null,
valorTotal double not null,
primary key (id_detalles),
key fk_pedido (id_pedido),
key fk_producto (id_producto),
constraint fk_pedido foreign key (id_producto) references pedido(id_pedido),
constraint fk_producto foreign key (id_producto) references producto(id_producto)
);
create table pedidoTransporte(
id_asignar int auto_increment,
id_transportista int not null,
id_pedido int not null,
fecha_recoger date,
primary key (id_asignar),
key fk_trans (id_transportista),
key fk_pedid (id_pedido),
constraint fk_trans foreign key (id_transportista) references transportista(id_transportista),
constraint fk_pedid foreign key (id_pedido) references pedido(id_pedido)
);
